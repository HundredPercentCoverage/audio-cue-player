{"version":3,"sources":["context/PlayersReducer.js","context/PlayersContext.js","hooks/useAudio.js","components/SingleAudioPlayer.jsx","components/MainPlayer.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["state","action","indexOfPlayerToMove","indexOfSelectedPlayer","type","players","id","length","selected","findIndex","player","filter","el","playerToMove","indexOfPlayerToChange","file","initialState","PlayersContext","createContext","PlayersProvider","children","useReducer","PlayersReducer","dispatch","Provider","value","useAudio","useState","Audio","audioElement","playing","setPlaying","ended","setEnded","addEventListener","useEffect","src","URL","createObjectURL","play","pause","toggle","stop","currentTime","SingleAudioPlayer","playerId","fileInput","useRef","useContext","Segment","color","ref","accept","hidden","onChange","e","target","files","Button","icon","onClick","current","click","Icon","name","disabled","style","padding","floated","MainPlayer","selectedFile","Group","h1","marginTop","Main","find","Header","as","content","textAlign","Container","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3aa2934.chunk.js","sourcesContent":["export default (state, action) => {\r\n  let indexOfPlayerToMove, indexOfSelectedPlayer;\r\n\r\n  switch (action.type) {\r\n    case 'add':\r\n      return {\r\n        players: [\r\n          ...state.players,\r\n          {\r\n            id: state.players.length ? state.players[state.players.length - 1].id + 1 : 1,\r\n            selected: state.players.length ? false : true\r\n          }\r\n        ]\r\n      }\r\n    case 'delete':\r\n      indexOfPlayerToMove = state.players.findIndex(player => player.id === action.id);\r\n\r\n      // If the player to remove is selected and there is more than one player in the list\r\n      if (state.players[indexOfPlayerToMove].selected && state.players.length > 1) {\r\n        // Set the next player to be selected, if it exists\r\n        // Otherwise if it's the last player, set the second last one as selected\r\n        if (state.players[indexOfPlayerToMove + 1]) {\r\n          state.players[indexOfPlayerToMove + 1].selected = true;\r\n        } else {\r\n          state.players[state.players.length - 2].selected = true;\r\n        }\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        players: state.players.filter(el => el.id !== action.id)\r\n      };\r\n    case 'moveup':\r\n      indexOfPlayerToMove = state.players.findIndex(player => player.id === action.id);\r\n\r\n      if (indexOfPlayerToMove !== 0) {\r\n        const playerToMove = state.players[indexOfPlayerToMove];\r\n\r\n        state.players[indexOfPlayerToMove] = state.players[indexOfPlayerToMove - 1];\r\n        state.players[indexOfPlayerToMove - 1] = playerToMove;\r\n      }\r\n      \r\n      return {\r\n        ...state\r\n      };\r\n    case 'movedown':\r\n      indexOfPlayerToMove = state.players.findIndex(player => player.id === action.id);\r\n\r\n      if (indexOfPlayerToMove !== state.players.length - 1) {\r\n        const playerToMove = state.players[indexOfPlayerToMove];\r\n\r\n        state.players[indexOfPlayerToMove] = state.players[indexOfPlayerToMove + 1];\r\n        state.players[indexOfPlayerToMove + 1] = playerToMove;\r\n      }\r\n      \r\n      return {\r\n        ...state\r\n      };\r\n    case 'selectnext':\r\n      indexOfSelectedPlayer = state.players.findIndex(player => player.selected);\r\n\r\n      if (indexOfSelectedPlayer < state.players.length - 1) {\r\n        state.players[indexOfSelectedPlayer].selected = false;\r\n        state.players[indexOfSelectedPlayer + 1].selected = true;\r\n      }\r\n      \r\n      return {\r\n        ...state\r\n      }\r\n    case 'selectprevious':\r\n      indexOfSelectedPlayer = state.players.findIndex(player => player.selected);\r\n\r\n      if (indexOfSelectedPlayer > 0) {\r\n        state.players[indexOfSelectedPlayer].selected = false;\r\n        state.players[indexOfSelectedPlayer - 1].selected = true;\r\n      }\r\n      \r\n      return {\r\n        ...state\r\n      }\r\n    case 'setplayerfile':\r\n      const indexOfPlayerToChange = state.players.findIndex(player => player.id === action.id);\r\n      state.players[indexOfPlayerToChange].file = action.file;\r\n\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer, createContext } from 'react';\r\nimport PlayersReducer from './PlayersReducer';\r\n\r\n// Start with a single player\r\nconst initialState = {\r\n  players: [{ id: 1, selected: true, file: null }]\r\n};\r\n\r\n// Context to be used by players\r\nexport const PlayersContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const PlayersProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(PlayersReducer, initialState);\r\n\r\n  return (\r\n    <PlayersContext.Provider value={{state, dispatch}}>\r\n      {children}\r\n    </PlayersContext.Provider>\r\n  );\r\n}","import { useState, useEffect } from 'react'\r\n\r\n// https://stackoverflow.com/a/47686478\r\nfunction useAudio(file) {\r\n  const [audioElement] = useState(new Audio());\r\n  const [playing, setPlaying] = useState(false);\r\n  const [ended, setEnded] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  audioElement.addEventListener('ended', () => {\r\n    setEnded(true);\r\n    setPlaying(false);\r\n  });\r\n\r\n  const stop = () => {\r\n    setPlaying(false);\r\n    audioElement.currentTime = 0;\r\n  }\r\n\r\n  useEffect(() => {\r\n    audioElement.src = file ? URL.createObjectURL(file) : '';\r\n  }, [file, audioElement]);\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      audioElement.play();\r\n      setEnded(false);\r\n    } else {\r\n      audioElement.pause();\r\n    }\r\n  }, [playing, audioElement]);\r\n\r\n  return { playing, toggle, stop, ended };\r\n}\r\n\r\nexport default useAudio\r\n","import React, { useRef, useContext} from 'react';\r\nimport { Segment, Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { PlayersContext } from '../context/PlayersContext';\r\nimport useAudio from '../hooks/useAudio';\r\n\r\nfunction SingleAudioPlayer({ file, selected, playerId }) {\r\n  const { playing, toggle, stop } = useAudio(file);\r\n  const fileInput = useRef();\r\n\r\n  const { dispatch } = useContext(PlayersContext);\r\n\r\n  const handleFileChange = (e) => {\r\n    dispatch({ type: 'setplayerfile', file: e.target.files[0], id: playerId });\r\n  }\r\n\r\n  return (\r\n    <Segment color={selected ? \"green\" : \"grey\"}>\r\n      <input type=\"file\" ref={fileInput} accept=\"audio/*\" hidden onChange={handleFileChange} />\r\n      <Button icon onClick={() => fileInput.current.click()}>\r\n        <Icon name=\"folder\" />\r\n      </Button>\r\n      <Button disabled={!file} icon onClick={toggle}>\r\n        <Icon name={playing ? 'pause' : 'play'} color={playing ? 'blue' : 'green'}/>\r\n      </Button>\r\n      <Button disabled={!file} icon onClick={stop}>\r\n        <Icon name=\"stop\" color=\"red\" />\r\n      </Button>\r\n      <Button icon onClick={() => dispatch({ type: 'delete', id: playerId })}>\r\n        <Icon name=\"delete\" />\r\n      </Button>\r\n      <span style={{ padding: 'inherit' }}>{file ? file.name : 'No file selected'}</span>\r\n      <Button icon onClick={() => dispatch({ type: 'moveup', id: playerId })} floated='right'>\r\n        <Icon name=\"arrow up\" />\r\n      </Button>\r\n      <Button icon onClick={() => dispatch({ type: 'movedown', id: playerId })} floated='right'>\r\n        <Icon name=\"arrow down\" />\r\n      </Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default SingleAudioPlayer\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\nimport { PlayersContext } from '../context/PlayersContext';\r\nimport useAudio from '../hooks/useAudio';\r\n\r\nfunction MainPlayer({ selectedFile }) {\r\n  const { playing, toggle, ended } = useAudio(selectedFile);\r\n  const { dispatch } = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n    if (ended) {\r\n      dispatch({ type: 'selectnext' });\r\n    }\r\n  }, [ended, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Button.Group>\r\n        <Button icon onClick={() => dispatch({ type: 'selectprevious' })}>\r\n          <Icon name='fast backward' />\r\n        </Button>\r\n        <Button icon onClick={toggle}>\r\n          <Icon name={ playing ? 'pause' : 'play' } color={playing ? 'blue' : 'green'} />\r\n        </Button>\r\n        <Button icon onClick={() => dispatch({ type: 'selectnext' })}>\r\n          <Icon name='fast forward' />\r\n        </Button>\r\n      </Button.Group>\r\n      <span style={{ padding: '1em' }}>{selectedFile ? selectedFile.name : 'No file'}</span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPlayer\r\n","import React, { useContext } from 'react';\r\nimport { Container, Segment, Header, Button, Icon } from 'semantic-ui-react';\r\n\r\nimport SingleAudioPlayer from './SingleAudioPlayer';\r\nimport MainPlayer from './MainPlayer';\r\nimport { PlayersContext } from '../context/PlayersContext';\r\n\r\nconst style = {\r\n  h1 : {\r\n    marginTop: '3em',\r\n  },\r\n};\r\n\r\nfunction Main() {\r\n  const { state, dispatch } = useContext(PlayersContext);\r\n  const { players } = state;\r\n\r\n  const selectedFile = players.length ? players.find(player => player.selected).file : null;\r\n\r\n  return (\r\n    <>\r\n      <Header as='h1' content='Cue Queue' style={style.h1} textAlign='center' />\r\n      <Container>\r\n        <MainPlayer selectedFile={selectedFile}/>\r\n        <Segment.Group>\r\n          {players.map(player => <SingleAudioPlayer key={player.id} selected={player.selected} file={player.file} playerId={player.id} />)}\r\n        </Segment.Group>\r\n        <Button icon onClick={() => dispatch({ type: 'add' })}>\r\n          <Icon name=\"plus\" />\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { PlayersProvider } from './context/PlayersContext';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <PlayersProvider>\r\n      <Main />\r\n    </PlayersProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
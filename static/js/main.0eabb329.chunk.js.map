{"version":3,"sources":["hooks/useAudio.js","components/SingleAudioPlayer.jsx","components/MainPlayer.jsx","App.js","serviceWorker.js","index.js"],"names":["useAudio","file","useState","Audio","audioElement","playing","setPlaying","ended","setEnded","addEventListener","useEffect","src","URL","createObjectURL","play","pause","toggle","stop","currentTime","SingleAudioPlayer","selected","playerId","fileInput","useRef","dispatch","useContext","PlayersContext","Segment","color","type","ref","accept","hidden","onChange","e","target","files","id","Button","icon","onClick","current","click","Icon","name","disabled","style","padding","MainPlayer","selectedFile","Group","React","createContext","h1","marginTop","initialState","reducer","state","action","newState","indexOfPlayerToMove","indexOfSelectedPlayer","length","filter","el","findIndex","player","playerToMove","indexOfPlayerToChange","App","useReducer","players","find","Provider","value","Header","as","content","textAlign","Container","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRA+BeA,MA5Bf,SAAkBC,GAAO,IAAD,EACCC,mBAAS,IAAIC,OAA7BC,EADe,sBAEQF,oBAAS,GAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGIJ,oBAAS,GAHb,mBAGfK,EAHe,KAGRC,EAHQ,KAyBtB,OAlBAJ,EAAaK,iBAAiB,SAAS,WACrCD,GAAS,GACTF,GAAW,MAQbI,qBAAU,WACRN,EAAaO,IAAMV,EAAOW,IAAIC,gBAAgBZ,GAAQ,KACrD,CAACA,EAAMG,IAEVM,qBAAU,WACRL,EAAUD,EAAaU,OAASV,EAAaW,UAC5C,CAACV,EAASD,IAEN,CAAEC,UAASW,OApBH,kBAAMV,GAAYD,IAoBPY,KAbb,WACXX,GAAW,GACXF,EAAac,YAAc,GAWGX,UCSnBY,MA9Bf,YAA0D,IAA7BlB,EAA4B,EAA5BA,KAAMmB,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAAY,EACrBrB,EAASC,GAAnCI,EAD+C,EAC/CA,QAASW,EADsC,EACtCA,OAAQC,EAD8B,EAC9BA,KACnBK,EAAYC,mBAEVC,EAAaC,qBAAWC,GAAxBF,SAMR,OACE,kBAACG,EAAA,EAAD,CAASC,MAAOR,EAAW,QAAU,QACnC,2BAAOS,KAAK,OAAOC,IAAKR,EAAWS,OAAO,UAAUC,QAAM,EAACC,SANtC,SAACC,GACxBV,EAAS,CAAEK,KAAM,gBAAiB5B,KAAMiC,EAAEC,OAAOC,MAAM,GAAIC,GAAIhB,OAM7D,kBAACiB,EAAA,EAAD,CAAQC,MAAI,EAACC,QAAS,kBAAMlB,EAAUmB,QAAQC,UAC5C,kBAACC,EAAA,EAAD,CAAMC,KAAK,YAEb,kBAACN,EAAA,EAAD,CAAQO,UAAW5C,EAAMsC,MAAI,EAACC,QAASxB,GACrC,kBAAC2B,EAAA,EAAD,CAAMC,KAAMvC,EAAU,QAAU,OAAQuB,MAAOvB,EAAU,OAAS,WAEpE,kBAACiC,EAAA,EAAD,CAAQO,UAAW5C,EAAMsC,MAAI,EAACC,QAASvB,GACrC,kBAAC0B,EAAA,EAAD,CAAMC,KAAK,OAAOhB,MAAM,SAE1B,kBAACU,EAAA,EAAD,CAAQC,MAAI,EAACC,QAAS,kBAAMhB,EAAS,CAAEK,KAAM,SAAUQ,GAAIhB,MACzD,kBAACsB,EAAA,EAAD,CAAMC,KAAK,YAEb,0BAAME,MAAO,CAAEC,QAAS,YAAc9C,EAAOA,EAAK2C,KAAO,sBCChDI,MA5Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,aAAgB,EACDjD,EAASiD,GAApC5C,EAD4B,EAC5BA,QAASW,EADmB,EACnBA,OAAQT,EADW,EACXA,MACjBiB,EAAaC,qBAAWC,GAAxBF,SAQR,OANAd,qBAAU,WACJH,GACFiB,EAAS,CAAEK,KAAM,iBAElB,CAACtB,EAAOiB,IAGT,oCACE,kBAACc,EAAA,EAAOY,MAAR,KACE,kBAACZ,EAAA,EAAD,CAAQC,MAAI,EAACC,QAAS,kBAAMhB,EAAS,CAAEK,KAAM,qBAC3C,kBAACc,EAAA,EAAD,CAAMC,KAAK,mBAEb,kBAACN,EAAA,EAAD,CAAQC,MAAI,EAACC,QAASxB,GACpB,kBAAC2B,EAAA,EAAD,CAAMC,KAAOvC,EAAU,QAAU,OAASuB,MAAOvB,EAAU,OAAS,WAEtE,kBAACiC,EAAA,EAAD,CAAQC,MAAI,EAACC,QAAS,kBAAMhB,EAAS,CAAEK,KAAM,iBAC3C,kBAACc,EAAA,EAAD,CAAMC,KAAK,mBAGf,0BAAME,MAAO,CAAEC,QAAS,QAAUE,EAAeA,EAAaL,KAAO,aCvB9DlB,EAAiByB,IAAMC,gBAE9BN,EAAQ,CACZO,GAAK,CACHC,UAAW,QAITC,EAAe,CAAC,CAAElB,GAAI,EAAGjB,UAAU,EAAMnB,KAAM,OAE/CuD,EAAU,SAACC,EAAOC,GACtB,IAAIC,EAAUC,EAAqBC,EAEnC,OAAQH,EAAO7B,MACb,IAAK,MACH,MAAM,GAAN,mBACK4B,GADL,CAEE,CACEpB,GAAIoB,EAAMK,OAASL,EAAMA,EAAMK,OAAS,GAAGzB,GAAK,EAAI,KAG1D,IAAK,SAGH,OAFAsB,EAAWF,EAAMM,QAAO,SAAAC,GAAE,OAAIA,EAAG3B,KAAOqB,EAAOrB,MAExC,YACFsB,GAEP,IAAK,SAIH,GAHAC,EAAsBH,EAAMQ,WAAU,SAAAC,GAAM,OAAIA,EAAO7B,KAAOqB,EAAOrB,MACrEsB,EAAWF,EAEiB,IAAxBG,EAA2B,CAC7B,IAAMO,EAAeV,EAAMG,GAE3BD,EAASC,GAAuBD,EAASC,EAAsB,GAC/DD,EAASC,EAAsB,GAAKO,EAGtC,OAAO,YACFR,GAEP,IAAK,WAIH,IAHAC,EAAsBH,EAAMQ,WAAU,SAAAC,GAAM,OAAIA,EAAO7B,KAAOqB,EAAOrB,UACrEsB,EAAWF,GAE0BK,OAAS,EAAG,CAC/C,IAAMK,EAAeV,EAAMG,GAE3BD,EAASC,GAAuBD,EAASC,EAAsB,GAC/DD,EAASC,EAAsB,GAAKO,EAGtC,OAAO,YACFR,GAEP,IAAK,aAUH,OAPAE,GAFAF,EAAWF,GAEsBQ,WAAU,SAAAC,GAAM,OAAIA,EAAO9C,aAEhCuC,EAASG,OAAS,IAC5CH,EAASE,GAAuBzC,UAAW,EAC3CuC,EAASE,EAAwB,GAAGzC,UAAW,GAG1C,YACFuC,GAEP,IAAK,iBAUH,OAPAE,GAFAF,EAAWF,GAEsBQ,WAAU,SAAAC,GAAM,OAAIA,EAAO9C,aAEhC,IAC1BuC,EAASE,GAAuBzC,UAAW,EAC3CuC,EAASE,EAAwB,GAAGzC,UAAW,GAG1C,YACFuC,GAEP,IAAK,gBAGH,IAAMS,GAFNT,EAAWF,GAE4BQ,WAAU,SAAAC,GAAM,OAAIA,EAAO7B,KAAOqB,EAAOrB,MAGhF,OAFAsB,EAASS,GAAuBnE,KAAOyD,EAAOzD,KAEvC,YACF0D,GAEP,QACE,OAAOJ,IA2BEc,MAvBf,WAAgB,IAAD,EACeC,qBAAWd,EAASD,GADnC,mBACNgB,EADM,KACG/C,EADH,KAGPyB,EAAesB,EAAQC,MAAK,SAAAN,GAAM,OAAIA,EAAO9C,YAAUnB,KAE7D,OACE,kBAACyB,EAAe+C,SAAhB,CAAyBC,MAAO,CAAEH,UAAS/C,aACzC,6BACE,kBAACmD,EAAA,EAAD,CAAQC,GAAG,KAAKC,QAAQ,YAAY/B,MAAOA,EAAMO,GAAIyB,UAAU,WAC/D,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY9B,aAAcA,IAC1B,kBAACtB,EAAA,EAAQuB,MAAT,KACGqB,EAAQS,KAAI,SAAAd,GAAM,OAAI,kBAAC,EAAD,CAAmBe,IAAKf,EAAO7B,GAAIjB,SAAU8C,EAAO9C,SAAUnB,KAAMiE,EAAOjE,KAAMoB,SAAU6C,EAAO7B,SAE3H,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,QAAS,kBAAMhB,EAAS,CAAEK,KAAM,UAC3C,kBAACc,EAAA,EAAD,CAAMC,KAAK,cCvGHsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0eabb329.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\n// https://stackoverflow.com/a/47686478\r\nfunction useAudio(file) {\r\n  const [audioElement] = useState(new Audio());\r\n  const [playing, setPlaying] = useState(false);\r\n  const [ended, setEnded] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n\r\n  audioElement.addEventListener('ended', () => {\r\n    setEnded(true);\r\n    setPlaying(false);\r\n  });\r\n\r\n  const stop = () => {\r\n    setPlaying(false);\r\n    audioElement.currentTime = 0;\r\n  }\r\n\r\n  useEffect(() => {\r\n    audioElement.src = file ? URL.createObjectURL(file) : '';\r\n  }, [file, audioElement]);\r\n\r\n  useEffect(() => {\r\n    playing ? audioElement.play() : audioElement.pause();\r\n  }, [playing, audioElement]);\r\n\r\n  return { playing, toggle, stop, ended };\r\n}\r\n\r\nexport default useAudio\r\n","import React from 'react';\r\nimport { Segment, Button, Icon } from 'semantic-ui-react';\r\nimport { useRef } from 'react';\r\nimport { useContext } from 'react';\r\nimport { PlayersContext } from '../App';\r\nimport useAudio from '../hooks/useAudio';\r\n\r\nfunction SingleAudioPlayer({ file, selected, playerId }) {\r\n  const { playing, toggle, stop } = useAudio(file);\r\n  const fileInput = useRef();\r\n\r\n  const { dispatch } = useContext(PlayersContext);\r\n\r\n  const handleFileChange = (e) => {\r\n    dispatch({ type: 'setplayerfile', file: e.target.files[0], id: playerId });\r\n  }\r\n\r\n  return (\r\n    <Segment color={selected ? \"green\" : \"grey\"}>\r\n      <input type=\"file\" ref={fileInput} accept=\"audio/*\" hidden onChange={handleFileChange} />\r\n      <Button icon onClick={() => fileInput.current.click()}>\r\n        <Icon name=\"folder\" />\r\n      </Button>\r\n      <Button disabled={!file} icon onClick={toggle}>\r\n        <Icon name={playing ? 'pause' : 'play'} color={playing ? 'blue' : 'green'}/>\r\n      </Button>\r\n      <Button disabled={!file} icon onClick={stop}>\r\n        <Icon name=\"stop\" color=\"red\" />\r\n      </Button>\r\n      <Button icon onClick={() => dispatch({ type: 'delete', id: playerId })}>\r\n        <Icon name=\"delete\" />\r\n      </Button>\r\n      <span style={{ padding: 'inherit' }}>{file ? file.name : 'No file selected'}</span>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default SingleAudioPlayer\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\nimport { PlayersContext } from '../App';\r\nimport useAudio from '../hooks/useAudio';\r\n\r\nfunction MainPlayer({ selectedFile }) {\r\n  const { playing, toggle, ended } = useAudio(selectedFile);\r\n  const { dispatch } = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n    if (ended) {\r\n      dispatch({ type: 'selectnext' });\r\n    }\r\n  }, [ended, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Button.Group>\r\n        <Button icon onClick={() => dispatch({ type: 'selectprevious' })}>\r\n          <Icon name='fast backward' />\r\n        </Button>\r\n        <Button icon onClick={toggle}>\r\n          <Icon name={ playing ? 'pause' : 'play' } color={playing ? 'blue' : 'green'} />\r\n        </Button>\r\n        <Button icon onClick={() => dispatch({ type: 'selectnext' })}>\r\n          <Icon name='fast forward' />\r\n        </Button>\r\n      </Button.Group>\r\n      <span style={{ padding: '1em' }}>{selectedFile ? selectedFile.name : 'No file'}</span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPlayer\r\n","import React, { useReducer } from 'react';\r\nimport { Container, Segment, Header, Button, Icon } from 'semantic-ui-react';\r\nimport SingleAudioPlayer from './components/SingleAudioPlayer';\r\nimport MainPlayer from './components/MainPlayer';\r\n\r\nexport const PlayersContext = React.createContext();\r\n\r\nconst style = {\r\n  h1 : {\r\n    marginTop: '3em',\r\n  },\r\n}\r\n\r\nconst initialState = [{ id: 1, selected: true, file: null }];\r\n\r\nconst reducer = (state, action) => {\r\n  let newState, indexOfPlayerToMove, indexOfSelectedPlayer;\r\n\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: state.length ? state[state.length - 1].id + 1 : 1\r\n        }\r\n      ];\r\n    case 'delete':\r\n      newState = state.filter(el => el.id !== action.id);\r\n\r\n      return [\r\n        ...newState\r\n      ];\r\n    case 'moveup':\r\n      indexOfPlayerToMove = state.findIndex(player => player.id === action.id);\r\n      newState = state;\r\n\r\n      if (indexOfPlayerToMove !== 0) {\r\n        const playerToMove = state[indexOfPlayerToMove];\r\n\r\n        newState[indexOfPlayerToMove] = newState[indexOfPlayerToMove - 1];\r\n        newState[indexOfPlayerToMove - 1] = playerToMove;\r\n      }\r\n      \r\n      return [\r\n        ...newState\r\n      ];\r\n    case 'movedown':\r\n      indexOfPlayerToMove = state.findIndex(player => player.id === action.id);\r\n      newState = state;\r\n\r\n      if (indexOfPlayerToMove !== newState.length - 1) {\r\n        const playerToMove = state[indexOfPlayerToMove];\r\n\r\n        newState[indexOfPlayerToMove] = newState[indexOfPlayerToMove + 1];\r\n        newState[indexOfPlayerToMove + 1] = playerToMove;\r\n      }\r\n      \r\n      return [\r\n        ...newState\r\n      ];\r\n    case 'selectnext':\r\n      newState = state;\r\n\r\n      indexOfSelectedPlayer = newState.findIndex(player => player.selected);\r\n\r\n      if (indexOfSelectedPlayer < newState.length - 1) {\r\n        newState[indexOfSelectedPlayer].selected = false;\r\n        newState[indexOfSelectedPlayer + 1].selected = true;\r\n      }\r\n      \r\n      return [\r\n        ...newState\r\n      ];\r\n    case 'selectprevious':\r\n      newState = state;\r\n\r\n      indexOfSelectedPlayer = newState.findIndex(player => player.selected);\r\n\r\n      if (indexOfSelectedPlayer > 0) {\r\n        newState[indexOfSelectedPlayer].selected = false;\r\n        newState[indexOfSelectedPlayer - 1].selected = true;\r\n      }\r\n      \r\n      return [\r\n        ...newState\r\n      ];\r\n    case 'setplayerfile':\r\n      newState = state;\r\n\r\n      const indexOfPlayerToChange = newState.findIndex(player => player.id === action.id);\r\n      newState[indexOfPlayerToChange].file = action.file;\r\n\r\n      return [\r\n        ...newState\r\n      ];\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [players, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const selectedFile = players.find(player => player.selected).file;\r\n\r\n  return (\r\n    <PlayersContext.Provider value={{ players, dispatch }}>\r\n      <div>\r\n        <Header as='h1' content='Cue Queue' style={style.h1} textAlign='center' />\r\n        <Container>\r\n          <MainPlayer selectedFile={selectedFile} />\r\n          <Segment.Group>\r\n            {players.map(player => <SingleAudioPlayer key={player.id} selected={player.selected} file={player.file} playerId={player.id} />)}\r\n          </Segment.Group>\r\n          <Button icon onClick={() => dispatch({ type: 'add' })}>\r\n            <Icon name=\"plus\" />\r\n          </Button>\r\n        </Container>\r\n      </div>\r\n    </PlayersContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}